version: "2.1"

networks:
  hotpot:

services:
  hotpot-backend:
    container_name: hotpot-backend
    build:
      context: .
      dockerfile: Dockerfile

    restart: always
    environment:
      - HOTPOT_API_HOST=
      - HOTPOT_API_PORT=8089
      - HOTPOT_API_READ_TIMEOUT=120s
      - HOTPOT_API_WRITE_TIMEOUT=120s
      - HOTPOT_API_IDLE_TIMEOUT=120s
      - HOTPOT_API_LOG_LEVEL=debug
      - HOTPOT_API_INFURA_BASE_URL_WS=wss://goerli.infura.io/ws/v3/
      - HOTPOT_API_INFURA_BASE_URL=https://goerli.infura.io/v3/
      - HOTPOT_API_INFURA_KEY=2c30c4fcc5dd4c48b7c067f64bf06bc7
      - HOTPOT_API_OPERATOR_PRIV_KEY=ca97802244de68c94a3b7a41974891532734040d37eeea037f597d65de890122
      - HOTPOT_API_PROXY_CONTRACT_ADDRESS=0x054A1e549c980b40a3597730c74Ed2bEf46aEc0C
      - HOTPOT_API_MARKETPLACE_CONTRACT_ADDRESS=0x2164b06F71Ad3Ebb5AA1E31ccb3d7EF69ce8Be05
      - HOTPOT_API_DATABASE_NAME=hotpot
      - HOTPOT_API_DATABASE_HOST=hotpot-db
      - HOTPOT_API_DATABASE_PORT=5432
      - HOTPOT_API_DATABASE_USER=postgres
      - HOTPOT_API_DATABASE_PASSWORD=pass1
      - HOTPOT_API_DATABASE_SSL=disable
    ports:
      - 8089:8089
    command: bash -c "./hotpot-backend run"
    depends_on:
      hotpot-db:
        condition: service_healthy
    networks:
      - hotpot

  hotpot-db:
    container_name: hotpot-db
    image: postgres:latest
    ports:
      - 5430:5432
    environment:
      - POSTGRES_DB=hotpot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass1
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d hotpot" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./data/hotpot-db:/var/lib/postgresql/data
    restart: always
    networks:
      - hotpot